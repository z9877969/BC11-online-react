{"ast":null,"code":"var _jsxFileName = \"/home/apleuha/goit/BC11-online-react/lesson-10(hooks)/todo/src/components/ToDoForm/ToDoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport s from \"./ToDoForm.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst radio = {\n  OPEN: \"open\",\n  CLOSE: \"close\"\n};\n\nconst formatDate = date => {\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  return `${year}-${month + 1}-${day < 9 ? \"0\" + day : day}`;\n};\n\nconst ToDoForm = _ref => {\n  _s();\n\n  let {\n    addToDo\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [descr, setDescr] = useState(\"\");\n  const [date, setDate] = useState(formatDate(new Date()));\n  const [priority, setPriority] = useState(\"low\");\n  const [agree, setAgree] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n\n    switch (name) {\n      case \"title\":\n        setTitle(value);\n        return;\n\n      case \"descr\":\n        setDescr(value);\n        return;\n\n      case \"date\":\n        setDate(value);\n        return;\n\n      case \"priority\":\n        setPriority(value);\n        return;\n\n      case \"agree\":\n        setAgree(checked);\n\n      default:\n        return;\n    }\n  }; // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.agree !== this.state.agree && this.state.agree === false) {\n  //     this.setState({ descr: \"CDU\" });\n  //     alert(\"отметьте согласие с политикой\");\n  //   }\n  // }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (nextState !== this.state) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const dataForm = {\n      title,\n      descr,\n      date,\n      priority,\n      agree\n    }; // if (!this.state.agree) return;\n\n    const todo = {\n      title,\n      descr,\n      date,\n      priority,\n      agree,\n      id: v4()\n    };\n    addToDo(todo);\n  }; // for (let i = 0; i < 1000000000; i++) {}\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.label,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.input,\n        type: \"date\",\n        name: \"date\",\n        value: date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.label,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.input,\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.label,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.input,\n        type: \"text\",\n        name: \"descr\",\n        value: descr,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"priority\",\n        value: priority,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"media\",\n          children: \"Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.label,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.input,\n        type: \"checkbox\",\n        name: \"agree\",\n        checked: agree,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Agree with our policy \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !agree,\n      className: s.btn,\n      style: {\n        backgroundColor: !agree && \"red\"\n      },\n      type: \"submit\",\n      children: \"Ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoForm, \"pD5+gluDQTCqNuC49RpqFuzMSXo=\");\n\n_c = ToDoForm;\nexport default ToDoForm; // const UseState = (initialValue) => {\n//   let value = initialValue;\n//   const setValue = prop => value = prop\n//   return [value, setValue]\n// }\n// const [number, setNumber] = UseState(0)\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"sources":["/home/apleuha/goit/BC11-online-react/lesson-10(hooks)/todo/src/components/ToDoForm/ToDoForm.jsx"],"names":["useState","v4","s","radio","OPEN","CLOSE","formatDate","date","day","getDay","month","getMonth","year","getFullYear","ToDoForm","addToDo","title","setTitle","descr","setDescr","setDate","Date","priority","setPriority","agree","setAgree","handleChange","e","name","value","checked","target","handleSubmit","preventDefault","dataForm","todo","id","form","label","input","btn","backgroundColor"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport s from \"./ToDoForm.module.scss\";\n\nconst radio = {\n  OPEN: \"open\",\n  CLOSE: \"close\",\n};\n\nconst formatDate = (date) => {\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  return `${year}-${month + 1}-${day < 9 ? \"0\" + day : day}`;\n};\n\nconst ToDoForm = ({ addToDo }) => {\n  const [title, setTitle] = useState(\"\");\n  const [descr, setDescr] = useState(\"\");\n  const [date, setDate] = useState(formatDate(new Date()));\n  const [priority, setPriority] = useState(\"low\");\n  const [agree, setAgree] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    switch (name) {\n      case \"title\":\n        setTitle(value);\n        return;\n      case \"descr\":\n        setDescr(value);\n        return;\n      case \"date\":\n        setDate(value);\n        return;\n      case \"priority\":\n        setPriority(value);\n        return;\n      case \"agree\":\n        setAgree(checked);\n      default:\n        return;\n    }\n  };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.agree !== this.state.agree && this.state.agree === false) {\n  //     this.setState({ descr: \"CDU\" });\n  //     alert(\"отметьте согласие с политикой\");\n  //   }\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (nextState !== this.state) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataForm = {\n      title,\n      descr,\n      date,\n      priority,\n      agree,\n    };\n    // if (!this.state.agree) return;\n    const todo = { title, descr, date, priority, agree, id: v4() };\n    addToDo(todo);\n  };\n\n  // for (let i = 0; i < 1000000000; i++) {}\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span> Date </span>\n        <input\n          className={s.input}\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        <span> Title </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        <span> Description </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"descr\"\n          value={descr}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <span>Priority</span>\n        <select name=\"priority\" value={priority} onChange={handleChange}>\n          <option value=\"low\">Low</option>\n          <option value=\"media\">Media</option>\n          <option value=\"high\">High</option>\n        </select>\n      </label>\n      <label className={s.label}>\n        <input\n          className={s.input}\n          type=\"checkbox\"\n          name=\"agree\"\n          checked={agree}\n          onChange={handleChange}\n        />\n        <span> Agree with our policy </span>\n      </label>\n      <button\n        disabled={!agree}\n        className={s.btn}\n        style={{ backgroundColor: !agree && \"red\" }}\n        type=\"submit\"\n      >\n        Ok\n      </button>\n    </form>\n  );\n};\n\nexport default ToDoForm;\n\n// const UseState = (initialValue) => {\n//   let value = initialValue;\n//   const setValue = prop => value = prop\n\n//   return [value, setValue]\n// }\n\n// const [number, setNumber] = UseState(0)\n"]},"metadata":{},"sourceType":"module"}